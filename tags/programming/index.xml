<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Nathan Borror</title><link>https://nathan.run/tags/programming/</link><description>Recent content in programming on Nathan Borror</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 09 Oct 2013 00:00:00 -0800</lastBuildDate><atom:link href="https://nathan.run/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>My experience learning iOS</title><link>https://nathan.run/2013/my-experience-learning-ios/</link><pubDate>Wed, 09 Oct 2013 00:00:00 -0800</pubDate><guid>https://nathan.run/2013/my-experience-learning-ios/</guid><description>Twice while living in Kansas I attempted to learn Objective-C and Cocoa. Getting past the first few chapters was pretty mind numbing. It didn’t really have anything to do with the difficulty curve. I already knew other languages—Python, Javascript—and didn’t really have a reason to learn something else.
The third time I tried was early 2012 when I started reading iOS Programming. This time I needed a project or I’d fail yet again.</description></item><item><title>Ghetto Facebook Registration with Django</title><link>https://nathan.run/2012/ghetto-facebook-registration-with-django/</link><pubDate>Mon, 08 Oct 2012 00:00:00 -0800</pubDate><guid>https://nathan.run/2012/ghetto-facebook-registration-with-django/</guid><description>I&amp;rsquo;m going to quickly walk you through how to build a server-side Facebook registration flow with Django. This is really basic and doesn&amp;rsquo;t rely on special libraries aside from httplib2 and urlib which are pretty standard.
First you need to create an app. I set my App Domain to localhost and Site URL to http://localhost:8000 for development purposes. You&amp;rsquo;ll probably need to do the same if you&amp;rsquo;re using Django&amp;rsquo;s built in development server.</description></item><item><title>Setting up Apple Push Notifications</title><link>https://nathan.run/2012/setting-up-apple-push-notifications/</link><pubDate>Sat, 15 Sep 2012 00:00:00 -0800</pubDate><guid>https://nathan.run/2012/setting-up-apple-push-notifications/</guid><description>While trying to figure this out I came across a great article by Matthijs Hollemans. I suggest following it if you&amp;rsquo;re interested in an in-depth tutorial. What follows is a more concise version of that article and instead of using PHP I&amp;rsquo;m using a variant of Jacky Tsoi&amp;rsquo;s Python script. This is pretty tedious and there are a lot of steps you have to get right in order for this to work properly so hang in there.</description></item><item><title>Sending Multipart Forms with Objective-C</title><link>https://nathan.run/2012/sending-multipart-forms-with-objective-c/</link><pubDate>Wed, 12 Sep 2012 00:00:00 -0800</pubDate><guid>https://nathan.run/2012/sending-multipart-forms-with-objective-c/</guid><description>It took me a few evenings to figure this out so I&amp;rsquo;m writing a quick explanation based on what I&amp;rsquo;ve found to work. My use-case is pretty simple, I want to POST some data to a form on a server from an iOS app I&amp;rsquo;m building. I&amp;rsquo;ll be using NSURLRequest to build the request object and NSURLConnection to make the actual connection to the server.
The first thing we need to understand is how Multipart Form requests should be structured.</description></item><item><title>Getting Started with MQTT</title><link>https://nathan.run/2012/getting-started-with-mqtt/</link><pubDate>Sun, 22 Jul 2012 00:00:00 -0800</pubDate><guid>https://nathan.run/2012/getting-started-with-mqtt/</guid><description>I wanted to play around with MQTT this evening so I put together a little tutorial on how to get started using Ubuntu and Mosquitto.
Installing Mosquitto Enter the following into your terminal. Remember to replace YOUR_UBUNTU_VERSION_HERE with the version of ubuntu you&amp;rsquo;re using, I was using Maverick Meerkat at the time so I replaced it with just maverick. First add the following two lines to /etc/apt/sources.list
deb http://ppa.launchpad.net/mosquitto-dev/mosquitto-ppa/ubuntu YOUR_UBUNTU_VERSION_HERE main deb-src http://ppa.</description></item><item><title>Save RAM with mobile middleware</title><link>https://nathan.run/2009/save-ram-with-mobile-middleware/</link><pubDate>Wed, 07 Oct 2009 00:00:00 -0800</pubDate><guid>https://nathan.run/2009/save-ram-with-mobile-middleware/</guid><description>A while back I wrote an article on how to set up a mobile site with Django ../going-mobile. Currently I have a Slicehost account which includes 256MB of RAM. My resources are tight and I really dislike having another set of unnecessary Apache processes for a mobile site that, aside from different templates, is using the same code base. The solution is quite simple, write a middleware.
The following code checks the incoming request for &amp;rsquo;m' or &amp;lsquo;mobile&amp;rsquo; in the domain name.</description></item><item><title>Working with Python and RabbitMQ</title><link>https://nathan.run/2009/working-with-python-and-rabbitmq/</link><pubDate>Wed, 20 May 2009 00:00:00 -0800</pubDate><guid>https://nathan.run/2009/working-with-python-and-rabbitmq/</guid><description>I recently installed RabbitMQ to handle some message queuing needs at Readernaut and thought I&amp;rsquo;d share how everything came together. If you&amp;rsquo;d like to learn more about RabbitMQ please read this.
To use RabbitMQ with python you need py-amqplib because Rabbit uses the AMQP standard. To make amqplib a little easier to use I needed a simple script that did three things:
Easy way to connect to RabbitMQ. Easy way to pull stuff out of the queue.</description></item><item><title>Capturing content in Django templates</title><link>https://nathan.run/2009/capturing-content-in-django-templates/</link><pubDate>Sat, 28 Feb 2009 00:00:00 -0800</pubDate><guid>https://nathan.run/2009/capturing-content-in-django-templates/</guid><description>As a template designer there are times when you have structural code surrounding a block which is waiting on content from a child template. It may look something like:
&amp;lt;div class=&amp;#34;content_title&amp;#34;&amp;gt; {% block content_title %}{% endblock %} &amp;lt;/div&amp;gt; Sometimes this block is never filled so ideally I want the DIV element in this case gone. This isn&amp;rsquo;t easy because there&amp;rsquo;s no way to know whether content is headed towards the block so one solution that I&amp;rsquo;ve used is:</description></item><item><title>Message Queuing imports</title><link>https://nathan.run/2008/message-queuing-imports/</link><pubDate>Fri, 05 Sep 2008 00:00:00 -0800</pubDate><guid>https://nathan.run/2008/message-queuing-imports/</guid><description>Last week I ran into some problems dealing with large book imports on Readernaut. I tested the system for around 50-100 books but had no idea people would upload lists of 900+ books. This begged the question, how do you handle importing very large sets of data before the browser times out?
Brief example User uploads a list of 1000 ISBNs to be imported into their library. Each book, if not already in the system, needs to be imported via another service like Amazon.</description></item><item><title>Creating a basic API with Django</title><link>https://nathan.run/2008/creating-a-basic-api-with-django/</link><pubDate>Mon, 11 Aug 2008 00:00:00 -0800</pubDate><guid>https://nathan.run/2008/creating-a-basic-api-with-django/</guid><description>Creating a simple public API for your site is a lot easier than you may think with Django. You&amp;rsquo;re basically just creating another view and serving it as XML or JSON instead of HTML.
What&amp;rsquo;s public? Decide what you want to be public. The best answer is the stuff you&amp;rsquo;re already displaying in your HTML templates. Then you need to create an entry in your url conf.
url(r&amp;#39;^api/v1/(?P&amp;lt;username&amp;gt;[-\w]+)/notes/?$&amp;#39;, &amp;#39;readernaut.api.views.user_notes&amp;#39;), Create the view In the case for Readernaut I wanted to provide an XML feed for users notes.</description></item><item><title>Ah-ha Event Delegation</title><link>https://nathan.run/2008/ah-ha-event-delegation/</link><pubDate>Mon, 05 May 2008 00:00:00 -0800</pubDate><guid>https://nathan.run/2008/ah-ha-event-delegation/</guid><description>Wrapping my head around things like OOP took months. It&amp;rsquo;s not because I&amp;rsquo;m an idiot (I don&amp;rsquo;t think) - it&amp;rsquo;s just because I needed all the explanations to marinate before having an ah-ha! moment.
I had an ah-ha today, with regards to Event Delegation. I&amp;rsquo;ve never seemed to completely understand events, yet I use them all the time. They&amp;rsquo;re an essential aspect of Actionscript and Javascript and there are two basic ways of capturing events, Event Handling and Event Delegation.</description></item></channel></rss>