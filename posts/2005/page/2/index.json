{"version":"https://jsonfeed.org/version/1.1","title":"Nathan Borror","home_page_url":"https://nathan.run/","feed_url":"https://nathan.run/posts/2005/index.json","authors":[{"name":"Nathan Borror","url":"https://nathan.run"}],"items":[{"title":"Hear Me Purr","date_published":"2005-04-30T18:18:00-0800","date_modified":"2005-04-30T18:18:00-0800","id":"https://nathan.run/2005/hear-me-purr/","url":"https://nathan.run/2005/hear-me-purr/","content_html":"\u003cp\u003eTime to chim in on Tiger. Dashboard, Spotlight, Automator, Oh My! I was worried \nat first, things were slow and hard drive was crankin'. Once Spotlight finished \nindexing my mess of over six years of files I breathed a sigh of relief.\u003c/p\u003e\n\u003cp\u003eApple has posted a handy little \u003ca href=\"http://developer.apple.com/documentation/AppleApplications/Conceptual/Dashboard_Tutorial/index.html\"\u003eDashboard Programming Guide\u003c/a\u003e \nwith all sorts of design guidlines and API info. They have done the same for \n\u003ca href=\"http://developer.apple.com/documentation/AppleApplications/Conceptual/AutomatorConcepts/index.html\"\u003eAutomator\u003c/a\u003e. \nThis little app can save scary amounts of time. BBEdit has realsed some nice \n\u003ca href=\"http://www.apple.com/downloads/macosx/automator/bbeditautomatoractions.html\"\u003eActions\u003c/a\u003e \nin 8.2. Spotlight is the girl I never had. Once you program yourself to press \n\u0026ldquo;command-spacebar\u0026rdquo; you\u0026rsquo;ll never need that pesky finder dock icon. Still not sure \nwhat to say about Safari RSS, its crashed about five times now. WebKit is \napparently much better but I have a feeling 10.4.1 will be a major bug fixer so \nsome may want to wait a week or two.\u003c/p\u003e\n\u003cp\u003eWhile there is some new eye candy, Tiger is all about saving time and becoming \nmore efficiant. Hopefully some of the philosophies will spill into other areas \nof work.\u003c/p\u003e\n"},{"title":"PHP on Rails","date_published":"2005-04-19T18:22:00-0800","date_modified":"2005-04-19T18:22:00-0800","id":"https://nathan.run/2005/php-on-rails/","url":"https://nathan.run/2005/php-on-rails/","content_html":"\u003cp\u003e\u003ca href=\"http://www.ruby-lang.org/en/\"\u003eRuby\u003c/a\u003e buzz has been making its rounds these last \nfew months. I\u0026rsquo;m anxious to use \u003ca href=\"http://www.rubyonrails.com\"\u003eRails\u003c/a\u003e but my ISP \nnor my employer support it. So I\u0026rsquo;ve been stuck staring at the colorful lollypop \nfrom a distance.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.cakephp.com/\"\u003eCake\u003c/a\u003e may be the solution to my problems, at least \nuntil Ruby becomes more widely supported. Cake is a PHP framework based on the \nRails design. It\u0026rsquo;s still in its infancy but it looks pretty solid. The developer \nhas shown his commitment by releasing four updates in a row this month.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUPDATE\u003c/strong\u003e As of April 18th Cake has been updated to \u003ca href=\"https://trac.cakephp.org/wiki/Cake/Download\"\u003e0.2.7\u003c/a\u003e with some nice new enhancements. \nThere is now a code generator, however, it only works in Windows. This update \nalso includes Flay (Textile like formating class), form generators, Folder \nclass, and the beginnings of data validation with the Model using regular \nexpressions.\u003c/p\u003e\n"},{"title":"The Bands","date_published":"2005-04-17T18:23:00-0800","date_modified":"2005-04-17T18:23:00-0800","id":"https://nathan.run/2005/the-bands/","url":"https://nathan.run/2005/the-bands/","content_html":"\u003cp\u003eThe Faint, The Ataris, The Features, The Futureheads, The Cure, The Hives, The \nKillers, The Music, The People, The Prodigy, The Roots, The Bravery, The Kills, \nThe Samples, The Shins, The Doors, The Stills, The Streets, The Strokes, The \nUsed, The Walkmen, The Darkness, The Who, The Ramones, The Sights, The National, \nThe Wrights, The Republic, The Congos, The Zincs, The Stix, The Perishers, The \nPolice, Rapture, The Unicorns, The Kinks, The Mollys, The Soviettes, The \nWinners, The Velons, The Smugglers, The Makers, The Upsidedown, The Donnas.\u003c/p\u003e\n\u003cp\u003eDid I forget anybody?\u003c/p\u003e\n"},{"title":"Selling Your Soul","date_published":"2005-04-13T18:23:00-0800","date_modified":"2005-04-13T18:23:00-0800","id":"https://nathan.run/2005/selling-your-soul/","url":"https://nathan.run/2005/selling-your-soul/","content_html":"\u003cp\u003eLately I\u0026rsquo;ve been going back and forth with my colleagues regarding pre-built \nadmin tools. My position has been the benefits of adopting a framework outweigh \nany off-the-shelf tool.\u003c/p\u003e\n\u003cp\u003eWhat is the difference between a framework and an off-the-shelf system? It\u0026rsquo;s \nlike buying fake plants instead of real ones. off-the-shelf products leave very \nlittle wiggle room for growth and are inevitably more than what you need. They \nalso exhibit poor usability, with there shiny plastic leaves and all.\u003c/p\u003e\n\u003cp\u003eA framework is the opposite. It\u0026rsquo;s like having the pot, soil, and seeds. All you \ndo is water and provide sunshine. This allows your tools to grow into the \nenvironment they are intended rather than trying to fit a square peg into a \nround hole. This also establishes a standard way of coding so when new \nprogramers come on board all they need to do is learn the framework and they\u0026rsquo;re \nready to roll.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.rubyonrails.com\"\u003eRuby on Rails\u003c/a\u003e is an example of a rising framework. \n\u003ca href=\"http://www.phppatterns.com\"\u003ePHP Patterns\u003c/a\u003e also provide an enormous listing of \ndesign patterns that can be bundled together to create honest frameworks.\u003c/p\u003e\n"},{"title":"Soft Launch","date_published":"2005-04-12T18:24:00-0800","date_modified":"2005-04-12T18:24:00-0800","id":"https://nathan.run/2005/soft-launch/","url":"https://nathan.run/2005/soft-launch/","content_html":"\u003cp\u003eThis launch is softer than a baby\u0026rsquo;s bum. Please excuse the possible broken \nlinks, sparse content, grayed out links, and unusually shaped big toe.\u003c/p\u003e\n\u003cp\u003eThings should be up to speed by the end of this week so keep checking back from \ntime to time. Also, if you don\u0026rsquo;t mind, I\u0026rsquo;ll throw you a me update:\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m done photo blogging. It was fun while it lasted but I\u0026rsquo;m out of good photos \nso back to writing. I\u0026rsquo;ll continue keeping my \u003ca href=\"http://www.flickr.com/photos/sketch22/\"\u003eFlicker account\u003c/a\u003e stocked with shiny visuals. Still \nwondering the streets of Kansas City. Currently working on some cool projects \nthat I can\u0026rsquo;t wait to share \u003cem\u003emore on those later\u003c/em\u003e. I\u0026rsquo;ve been getting a lot of \nemails about Jupiter, my project management software. This has lead me to \nbelieve that I should finish that damn thing, soon. All is well for the most \npart.\u003c/p\u003e\n\u003cp\u003eThe evolution of this site should be fun and interesting so stay tuned.\u003c/p\u003e\n"},{"title":"Broken Window Theory","date_published":"2005-04-08T18:25:00-0800","date_modified":"2005-04-08T18:25:00-0800","id":"https://nathan.run/2005/broken-window-theory/","url":"https://nathan.run/2005/broken-window-theory/","content_html":"\u003cp\u003eLately I\u0026rsquo;ve become a little obsessed with the \u0026ldquo;Broken Window Theory.\u0026rdquo; I was \nintroduced to this theory by \u003ca href=\"http://www.squidfingers.com\"\u003eTravis\u003c/a\u003e and \u003ca href=\"http://www.alwayscurious.com\"\u003eCharlie\u003c/a\u003e. Soon after, it began popping into my head at \nwork, home, or while I was coding. Then I started noticing it in \u003ca href=\"http://www.gladwell.com/tippingpoint/\"\u003ebooks\u003c/a\u003e and on the \u003ca href=\"http://www.npr.org/templates/story/story.php?storyId=4520866\"\u003eradio\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe theory is normally applied to urban decay and crime, however, it can be \napplied to almost anything. How did your apartment get so dirty? How did your \ncode get out of control? Well, it\u0026rsquo;s all because of one sock, one poorly placed \nif statement, or one broken window.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOne broken window, left unrepaired for any substantial length of time, instills \na sense of abandonment â€” a sense that the powers that be don\u0026rsquo;t care. So another \nwindow gets broken. People start littering. Graffiti appears. Serious structural \ndamage begins. In a relativly short space of time, the structure becomes damaged \nbeyond the desire to fix it, and the sense of abandonment becomes reality.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe preceding quote was taken from \u003ca href=\"http://www.pragmaticprogrammer.com/ppbook/\"\u003eThe Pragmatic Programmer\u003c/a\u003e by Andrew Hunt and David Thomas. It \nbasically means watch out for the small stuff. If you can keep the tiny cracks \nout early they won\u0026rsquo;t turn into gorges. The hope is that if your projects are \npristine and another person is invited to change or update something they will \ntake notice in its perfection and not want to be the first to break a window.\u003c/p\u003e\n"}]}